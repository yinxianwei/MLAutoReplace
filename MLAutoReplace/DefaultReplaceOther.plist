<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<array>
	<dict>
		<key>regex</key>
		<string>^\s*@s/$</string>
		<key>replaceContent</key>
		<string>@property (nonatomic, strong) &lt;#custom#&gt;</string>
	</dict>
	<dict>
		<key>regex</key>
		<string>^\s*@w/$</string>
		<key>replaceContent</key>
		<string>@property (nonatomic, weak) &lt;#custom#&gt;</string>
	</dict>
	<dict>
		<key>regex</key>
		<string>^\s*@a/$</string>
		<key>replaceContent</key>
		<string>@property (nonatomic, assign) &lt;#custom#&gt;</string>
	</dict>
	<dict>
		<key>regex</key>
		<string>^\s*@c/$</string>
		<key>replaceContent</key>
		<string>@property (nonatomic, copy) NSString *&lt;#custom#&gt;</string>
	</dict>
	<dict>
		<key>regex</key>
		<string>^\s*-\s*\(\s*id\s*\)\s*init\s*//$</string>
		<key>replaceContent</key>
		<string>- (instancetype)init
{
    self = [super init];
    if (self) {
        &lt;#statements#&gt;
    }
    return self;
}</string>
	</dict>
	<dict>
		<key>regex</key>
		<string>^\s*-\s*\(\s*instancetype\s*\)\s*init\s*//$</string>
		<key>replaceContent</key>
		<string>- (instancetype)init
{
    self = [super init];
    if (self) {
        &lt;#statements#&gt;
    }
    return self;
}</string>
	</dict>
	<dict>
		<key>regex</key>
		<string>^\s*--ts$</string>
		<key>replaceContent</key>
		<string>- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section
{
    return 0;
}

- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath
{
    static NSString *CellIdentifier = @&quot;&lt;#CellIdentifier#&gt;&quot;;
    &lt;#UITableViewCell#&gt; *cell = [tableView dequeueReusableCellWithIdentifier:CellIdentifier];
    if (!cell) {
        cell = &lt;#[[UITableViewCell alloc]initWithStyle:UITableViewCellStyleDefault reuseIdentifier:CellIdentifier]#&gt;;
    }
    
    &lt;#custom#&gt;
    
    return cell;
}
</string>
	</dict>
	<dict>
		<key>regex</key>
		<string>^\s*--td$</string>
		<key>replaceContent</key>
		<string>- (CGFloat)tableView:(UITableView *)tableView heightForRowAtIndexPath:(NSIndexPath *)indexPath
{
    return &lt;#44.0f#&gt;;
}

- (void)tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath
{
    [tableView deselectRowAtIndexPath:indexPath animated:YES];
    
    &lt;#custom#&gt;
}
</string>
	</dict>
	<dict>
		<key>regex</key>
		<string>^\s*--bl$</string>
		<key>replaceContent</key>
		<string>typedef &lt;#returnType#&gt;(^&lt;#name#&gt;)(&lt;#arguments#&gt;);</string>
	</dict>
	<dict>
		<key>regex</key>
		<string>^\s*--tag$</string>
		<key>replaceContent</key>
		<string>尹现伟</string>
	</dict>
	<dict>
		<key>regex</key>
		<string>^\s*--tab$</string>
		<key>replaceContent</key>
		<string>    // MARK: - UITableViewDataSource
    func numberOfSectionsInTableView(tableView: UITableView) -&gt; Int {
        
        return 1;
    }
    
    func tableView(tableView: UITableView, numberOfRowsInSection section: Int) -&gt; Int {
        
        return 0;
    }
    
    func tableView(tableView: UITableView, cellForRowAtIndexPath indexPath: NSIndexPath) -&gt; UITableViewCell {
        
        let cell = tableView.dequeueReusableCellWithIdentifier(&quot;Cell&quot;, forIndexPath: indexPath) as! UITableViewCell;
        
        
        return cell;
    }
    
    // MARK: - UITableViewDelegate
    func tableView(tableView: UITableView, didSelectRowAtIndexPath indexPath: NSIndexPath) {
        tableView.deselectRowAtIndexPath(indexPath, animated: true);
        
        
    }
</string>
	</dict>
	<dict>
		<key>regex</key>
		<string>^\s*==mr$</string>
		<key>replaceContent</key>
		<string>//MARK: - </string>
	</dict>
	<dict>
		<key>regex</key>
		<string>^\s*==fm$</string>
		<key>replaceContent</key>
		<string>//FIXME: </string>
	</dict>
	<dict>
		<key>regex</key>
		<string>^\s*==td$</string>
		<key>replaceContent</key>
		<string>//TODO: </string>
	</dict>
	<dict>
		<key>regex</key>
		<string>^\s*==da$</string>
		<key>replaceContent</key>
		<string>        dispatch_after(dispatch_time(DISPATCH_TIME_NOW,Int64(1 * Double(NSEC_PER_SEC))), dispatch_get_main_queue()) { () -&gt; Void in
            
        }</string>
	</dict>
</array>
</plist>
